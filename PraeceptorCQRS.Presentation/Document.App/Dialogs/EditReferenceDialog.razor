@using Ardalis.GuardClauses;
@using Document.App.Components
@using Document.App.Models

<div class="modal t-modal primary fade show"
     data-backdrop="static"
     aria-labelledby="staticBackdropLabel"
     aria-hidden="true"
     aria-modal="true"
     role="dialog">
    <div class="modal-dialog modal-dialog-scrollable modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Edite os campos desejáveis</h5>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="form-group purple-border">
                        <form>
                            <div class="accordion" id="accordionNomes">

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingTitulo">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTitulo" aria-expanded="false" aria-controls="collapseTitulo">
                                            <text>Título: <i>@Title</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseTitulo" class="accordion-collapse collapse bg-light" aria-labelledby="headingTitulo" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <input class="form-control form-control-sm" type="text" value=@Title @onchange=@OnTitleChange style="font-size:small; background-color:aliceblue;">
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingAutores">
                                        <button class="accordion-button btn-group-sm" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAutores" aria-expanded="true" aria-controls="collapseAutores">
                                            <text>Autor(es): <i>@NomesToString(autores.Values.ToList())</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseAutores" class="accordion-collapse collapse bg-light" aria-labelledby="headingAutores" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <ListOfNamesComponent Header="Autor(es)" Names="@autores" OnNomeChanged="@OnAuthorNameChanged" OnDeleteName="@OnDeleteAutor"></ListOfNamesComponent>
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingTradutores">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTradutores" aria-expanded="false" aria-controls="collapseTradutores">
                                            <text>Tradutor(es): <i>@NomesToString(tradutores.Values.ToList())</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseTradutores" class="accordion-collapse collapse bg-light" aria-labelledby="headingTradutores" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <ListOfNamesComponent Header="Tradutor(es)" Names="@tradutores" OnNomeChanged="@OnTraductorNameChanged" OnDeleteName="@OnDeleteTradutor"></ListOfNamesComponent>
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingOrganizadores">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOrganizadores" aria-expanded="false" aria-controls="collapseOrganizadores">
                                            <text>Organizador(es): <i>@NomesToString(organizadores.Values.ToList())</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseOrganizadores" class="accordion-collapse collapse bg-light" aria-labelledby="headingOrganizadores" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <ListOfNamesComponent Header="Organizador(es)" Names="@organizadores" OnNomeChanged="@OnOrganizatorNameChanged" OnDeleteName="@OnDeleteOrganizador"></ListOfNamesComponent>
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingEditora">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseEditora" aria-expanded="false" aria-controls="collapseEditora">
                                            <text>Editora: <i>@PublisherToString(Publisher?.Nome, Publisher?.Endereco)</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseEditora" class="accordion-collapse collapse bg-light" aria-labelledby="headingEditora" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label for="inputPublisherName" class="form-label">Nome</label>
                                                    <input id="inputPublisherName" class="form-control form-control-sm" type="text" value=@Publisher?.Nome @onchange=@OnPublisherNameChange style="font-size:small; background-color:aliceblue;">
                                                </div>
                                                <div class="col-md-6">
                                                    <label for="inputPublisherAddress" class="form-label">Endereço</label>
                                                    <input id="inputPublisherAddress" class="form-control form-control-sm" type="text" value=@Publisher?.Endereco @onchange=@OnPublisherAddressChange style="font-size:small; background-color:aliceblue;">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingEditor">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseEditor" aria-expanded="false" aria-controls="collapseEditor">
                                            <text>Editor: <i>@Editor</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseEditor" class="accordion-collapse collapse bg-light" aria-labelledby="headingEditor" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <input class="form-control form-control-sm" type="text" value=@Editor @onchange=@OnEditorChange style="font-size:small; background-color:aliceblue;">
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingVolume">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseVolume" aria-expanded="false" aria-controls="collapseVolume">
                                            <text>Volume: <i>@VolumeToString(Volume?.Text1, Volume?.Text2)</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseVolume" class="accordion-collapse collapse bg-light" aria-labelledby="headingVolume" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label for="inputVolumeNumber" class="form-label">Número</label>
                                                    <input id="inputVolumeNumber" class="form-control form-control-sm" type="text" value=@Volume?.Text1 @onchange=@OnVolumeText1Change style="font-size:small; background-color:aliceblue;">
                                                </div>
                                                <div class="col-md-10">
                                                    <label for="inputVolumeTitle" class="form-label">Título do volume</label>
                                                    <input id="inputVolumeTitle" class="form-control form-control-sm" type="text" value=@Volume?.Text2 @onchange=@OnVolumeText2Change style="font-size:small; background-color:aliceblue;">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingSeries">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSeries" aria-expanded="false" aria-controls="collapseSeries">
                                            <text>Série: <i>@Series</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseSeries" class="accordion-collapse collapse bg-light" aria-labelledby="headingSeries" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <input class="form-control form-control-sm" type="text" value=@Series @onchange=@OnSeriesChange style="font-size:small; background-color:aliceblue;">
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingNote">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseNote" aria-expanded="false" aria-controls="collapseNote">
                                            <text>Nota: <i>@Note</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseNote" class="accordion-collapse collapse bg-light" aria-labelledby="headingNote" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <input class="form-control form-control-sm" type="text" value=@Note @onchange=@OnNoteChange style="font-size:small; background-color:aliceblue;">
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingDetails">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseDetails" aria-expanded="false" aria-controls="collapseDetails">
                                            <text>Detalhes: <i>@Details</i></text>
                                        </button>
                                    </h2>
                                    <div id="collapseDetails" class="accordion-collapse collapse bg-light" aria-labelledby="headingDetails" data-bs-parent="#accordionNomes">
                                        <div class="accordion-body">
                                            <input class="form-control form-control-sm" type="text" value=@Details @onchange=@OnDetailsChange style="font-size:small; background-color:aliceblue;">
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <br />

                            <div class="row">
                                <div class="col-md-3">
                                    <label for="inputEdicao" class="form-label">Edição</label>
                                    <input type="number" class="form-control form-control-sm" id="inputEdicao" value=@Edition style="font-size:small; background-color:aliceblue;">
                                </div>
                                <div class="col-md-3">
                                    <label for="inputAno" class="form-label">Ano</label>
                                    <input type="number" class="form-control form-control-sm" id="inputAno" value=@Year style="font-size:small; background-color:aliceblue;">
                                </div>
                                <div class="col-md-3">
                                    <label for="inputExemplares" class="form-label">Exemplares</label>
                                    <input type="number" class="form-control form-control-sm" id="inputExemplares" value=@Exemplares style="font-size:small; background-color:aliceblue;">
                                </div>
                                <div class="col-md-3">
                                    <label for="inputISBN" class="form-label">ISBN</label>
                                    <input type="text" class="form-control form-control-sm" value=@ISBN @onchange=@OnISBNChange style="font-size:small; background-color:aliceblue;">
                                </div>
                            </div>

                            <br />

                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" value="@Online" @onchange="@OnOnlineChange">
                                <label class="form-check-label" for="flexSwitchCheckChecked">Online</label>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-outline-danger"
                        data-bs-dismiss="modal"
                        data-toggle="tooltip"
                        data-placement="top"
                        data-bs-toggle="modal"
                        data-bs-target="#editReferenceModal"
                        title="Cuidado: As modificações serão perdidas"
                        @onclick="@(() => Cancel())">
                    Ignorar
                </button>
                <button type="button" class="btn btn-outline-primary" @onclick="@(async () => await Ok())">Salvar alterações</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Guid Id { get; set; } = default!;
    [Parameter]
    public ListOfNomesModel Autores { get; set; } = default!;
    [Parameter]
    public ListOfNomesModel Tradutores { get; set; } = default!;
    [Parameter]
    public ListOfNomesModel Organizadores { get; set; } = default!;
    [Parameter]
    public string? Editor { get; set; }
    [Parameter]
    public int Exemplares { get; set; }
    [Parameter]
    public string? Title { get; set; }
    [Parameter]
    public PublisherValueModel? Publisher { get; set; }
    [Parameter]
    public int Year { get; set; }
    [Parameter]
    public VolumeValueModel? Volume { get; set; }
    [Parameter]
    public string? Series { get; set; }
    [Parameter]
    public int Edition { get; set; }
    [Parameter]
    public string? Note { get; set; }
    [Parameter]
    public string? ISBN { get; set; }
    [Parameter]
    public bool Online { get; set; }
    [Parameter]
    public string? Details { get; set; }
    [Parameter]
    public EventCallback<BibItemValueModel?> OnClose { get; set; } = default!;

    private Dictionary<Guid, NameValueModel> autores = new();
    private Dictionary<Guid, NameValueModel> tradutores = new();
    private Dictionary<Guid, NameValueModel> organizadores = new();

    protected override void OnInitialized()
    {
        if (Autores.Nomes is not null)
            Autores.Nomes.ForEach(o => autores.Add(Guid.NewGuid(), o));
        if (Tradutores.Nomes is not null)
            Tradutores.Nomes.ForEach(o => tradutores.Add(Guid.NewGuid(), o));
        if (Organizadores.Nomes is not null)
            Organizadores.Nomes.ForEach(o => organizadores.Add(Guid.NewGuid(), o));
        base.OnInitialized();
    }

    private Task Cancel()
    {
        return OnClose.InvokeAsync(null);
    }

    private Task Ok()
    {
        var aux1 = new ListOfNomesModel();
        aux1.Nomes.AddRange(autores.Values);
        var aux2 = new ListOfNomesModel();
        aux2.Nomes.AddRange(tradutores.Values);
        var aux3 = new ListOfNomesModel();
        aux3.Nomes.AddRange(organizadores.Values);

        return OnClose.InvokeAsync(
            new BibItemValueModel(
                Id,
                aux1,
                aux2,
                aux3,
                Editor,
                Exemplares,
                Title,
                Publisher,
                Year,
                Volume,
                Series,
                Edition,
                Note,
                ISBN,
                Online,
                Details
            )
        );
    }

    private string NomesToString(List<NameValueModel>? names)
    {
        string str = "";
        if (names is not null && names.Count > 0)
        {
            for (int i = 0; i < names.Count - 1; i++)
                str += $"{names[i].Sobrenome}, {names[i].Nome}; ";
            str += $"{names[^1].Sobrenome}, {names[^1].Nome}";
        }
        return str;
    }

    private string PublisherToString(string? nome, string? endereco)
    {
        if (!string.IsNullOrWhiteSpace(nome) && !string.IsNullOrWhiteSpace(endereco))
            return $"{nome}: {endereco}";
        if (!string.IsNullOrWhiteSpace(nome) && string.IsNullOrWhiteSpace(endereco))
            return $"{nome}";
        if (string.IsNullOrWhiteSpace(nome) && !string.IsNullOrWhiteSpace(endereco))
            return $"{endereco}";
        return "";
    }

    private string VolumeToString(string? text1, string? text2)
    {
        if (!string.IsNullOrWhiteSpace(text1) && !string.IsNullOrWhiteSpace(text2))
            return $"{text1} - {text2}";
        if (!string.IsNullOrWhiteSpace(text1) && string.IsNullOrWhiteSpace(text2))
            return text1;
        if (string.IsNullOrWhiteSpace(text1) && !string.IsNullOrWhiteSpace(text2))
            return text2;
        return "";
    }

    private void OnTitleChange(ChangeEventArgs args)
    {
        Title = (string?)args.Value;
    }
    private void OnEditorChange(ChangeEventArgs args)
    {
        Editor = (string?)args.Value;
    }
    private void OnSeriesChange(ChangeEventArgs args)
    {
        Series = (string?)args.Value;
    }
    private void OnNoteChange(ChangeEventArgs args)
    {
        Note = (string?)args.Value;
    }
    private void OnDetailsChange(ChangeEventArgs args)
    {
        Details = (string?)args.Value;
    }
    private void OnISBNChange(ChangeEventArgs args)
    {
        ISBN = (string?)args.Value;
    }
    private void OnOnlineChange(ChangeEventArgs args)
    {
        Online = (bool)args.Value!;
    }
    private void OnVolumeText1Change(ChangeEventArgs args)
    {
        Volume = new((string?)args.Value, Volume?.Text2);
    }
    private void OnVolumeText2Change(ChangeEventArgs args)
    {
        Volume = new(Volume?.Text1, (string?)args.Value);
    }
    private void OnPublisherNameChange(ChangeEventArgs args)
    {
        Publisher = new((string?)args.Value, Publisher?.Endereco);
    }
    private void OnPublisherAddressChange(ChangeEventArgs args)
    {
        Publisher = new(Publisher?.Nome, (string?)args.Value);
    }

    private void OnDeleteAutor(Guid id)
    {
        autores.Remove(id);
        StateHasChanged();
    }
    private void OnDeleteTradutor(Guid id)
    {
        tradutores.Remove(id);
        StateHasChanged();
    }
    private void OnDeleteOrganizador(Guid id)
    {
        organizadores.Remove(id);
        StateHasChanged();
    }
    private void OnAuthorNameChanged(Guid key, NameValueModel name)
    {
        autores[key] = name;
        StateHasChanged();
    }
    private void OnTraductorNameChanged(Guid key, NameValueModel name)
    {
        tradutores[key] = name;
        StateHasChanged();
    }
    private void OnOrganizatorNameChanged(Guid key, NameValueModel name)
    {
        organizadores[key] = name;
        StateHasChanged();
    }
}
