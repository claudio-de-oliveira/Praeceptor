@using Document.App.Models;

<div class="modal t-modal primary fade show"
     data-backdrop="static"
     aria-labelledby="staticBackdropLabel"
     aria-hidden="true"
     aria-modal="true"
     role="dialog">
    <div class="modal-dialog modal-dialog-scrollable modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Edite os campos desejáveis</h5>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="form-group purple-border">
                        <form>
                            @if (Create)
                            {
                                <div class="mb-3">
                                    <label for="recipient-group-name" class="col-form-label">Nome do Grupo</label>
                                    <input type="text" class="form-control" @bind-value="@groupName" id="recipient-group-name" contenteditable="true">
                                </div>
                                <div class="mb-3">
                                    <label for="recipient-variable-name" class="col-form-label">Nome da Variável</label>
                                    <input type="text" class="form-control" @bind-value="@variableName" id="recipient-variable-name" contenteditable="true">
                                </div>
                            }
                            <div class="mb-3">
                                <label for="recipient-value" class="col-form-label">Value</label>
                                <textarea type="text" class="form-control" @bind="@value" wrap="soft" id="recipient-value" rows="3" contenteditable="true"></textarea>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-outline-danger"
                        data-bs-dismiss="modal"
                        data-toggle="tooltip"
                        data-placement="top"
                        data-bs-toggle="modal"
                        data-bs-target="#createVariableModal"
                        title="Cuidado: As modificações serão perdidas"
                        @onclick="@(() => Cancel())">
                    Ignorar
                </button>
                <button type="button" class="btn btn-outline-primary" @onclick="@(async () => await Ok())">Salvar alterações</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<VariableXModel> OnClose { get; set; } = default!;
    [Parameter]
    public VariableXModel Variable { get; set; } = default!;
    [Parameter]
    public bool Create { get; set; }

    private string groupName = "";
    private string variableName = "";
    private string value = "";

    protected override void OnInitialized()
    {
        groupName = Variable.GroupName;
        variableName = Variable.VariableName;
        value = Variable.Value;

        base.OnInitialized();
    }

    // protected override Task OnAfterRenderAsync(bool firstRender)
    // {
    //     if (firstRender)
    //     {
    //         groupName = Variable.GroupName;
    //         variableName = Variable.VariableName;
    //         value = Variable.Value;
    //     }
    //     return base.OnAfterRenderAsync(firstRender);
    // }

    private Task Cancel()
    {
        return OnClose.InvokeAsync(null);
    }

    private Task Ok()
    {
        return OnClose.InvokeAsync(
            new VariableXModel
                {
                    Id = Variable.Id,
                    GroupName = groupName,
                    GroupId = Variable.GroupId,
                    Curriculum = Variable.Curriculum,
                    VariableName = variableName,
                    Value = value,
                    IsDeletable = true
                });
    }
}
