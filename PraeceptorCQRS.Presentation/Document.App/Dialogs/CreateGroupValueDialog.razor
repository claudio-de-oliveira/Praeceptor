<div class="modal t-modal primary fade show"
     data-backdrop="static"
     aria-labelledby="staticBackdropLabel"
     aria-hidden="true"
     aria-modal="true"
     role="dialog">
    <div class="modal-dialog modal-dialog-scrollable modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Forneça o novo valor para o grupo @Group.Code</h5>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="form-group purple-border">
                        <form>
                            <div class="mb-3">
                                <label for="recipient-code" class="col-form-label">Valor do grupo</label>
                                <input type="text" class="form-control" @bind-value="@groupValue" id="recipient-code" contenteditable="true">
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-outline-danger"
                        data-bs-dismiss="modal"
                        data-toggle="tooltip"
                        data-placement="top"
                        data-bs-toggle="modal"
                        data-bs-target="#createGroupValueModal"
                        title="Cuidado: As modificações serão perdidas"
                        @onclick="@(() => Cancel())">
                    Ignorar
                </button>
                <button type="button" class="btn btn-outline-primary" @onclick="@(async () => await Ok())">Salvar alterações</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public GroupModel Group { get; set; } = null!;
    [Parameter]
    public EventCallback<GroupValueModel?> OnClose { get; set; }

    private string groupValue = "";

    private Task Cancel()
    {
        return OnClose.InvokeAsync(null);
    }

    private Task Ok()
    {
        return OnClose.InvokeAsync(new GroupValueModel { GroupId = Group.Id, Value = groupValue });
    }
}
