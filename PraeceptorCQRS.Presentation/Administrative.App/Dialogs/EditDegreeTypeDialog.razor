@using Administrative.App.Models

<div class="modal t-modal primary fade show"
     data-backdrop="static"
     aria-labelledby="staticBackdropLabel"
     aria-hidden="true"
     aria-modal="true"
     role="dialog">
    <div class="modal-dialog modal-dialog-scrollable modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Edite os campos desejáveis</h5>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="form-group purple-border">
                        <div class="mb-3">
                            <label for="recipient-code" class="col-form-label">Código</label>
                            <input type="text" class="form-control" @bind-value="@_code" id="recipient-code" contenteditable="false" style="background-color:aliceblue;">
                        </div>
                    </div>
                    <div class="form-group purple-border">
                        <div class="mb-3">
                            <label for="recipient-code3" class="col-form-label">Código resumido (3 letras)</label>
                            <input type="text" class="form-control" @bind-value="@_code3" id="recipient-code3" contenteditable="false" style="background-color:aliceblue;">
                        </div>
                    </div>
                </div>
                <div class="form-check form-switch">
                    <input class="form-check-input-lato" @bind-value="@_latoSensu" type="checkbox" id="flexSwitchLatoCheckChecked" checked="@_latoSensu">
                    <label class="form-check-label" for="flexSwitchLatoCheckChecked">Lato Sensu</label>
                </div>
                <div class="form-check form-switch">
                    <input class="form-check-input-strict" @bind-value="@_strictoSensu" type="checkbox" id="flexSwitchStrictoCheckChecked" checked="@_strictoSensu">
                    <label class="form-check-label" for="flexSwitchStrictoCheckChecked">Stricto Sensu</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-outline-danger"
                        data-bs-dismiss="modal"
                        data-toggle="tooltip"
                        data-placement="top"
                        data-bs-toggle="modal"
                        data-bs-target="#editDegreeTypeModal"
                        title="Cuidado: As modificações serão perdidas"
                        @onclick="@(() => Cancel())">
                    Ignorar
                </button>
                <button type="button" class="btn btn-outline-primary" @onclick="@(async () => await Ok())">Salvar alterações</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Code { get; set; } = default!;
    [Parameter]
    public string Code3 { get; set; } = default!;
    [Parameter]
    public bool LatoSensu { get; set; } = default!;
    [Parameter]
    public bool StrictoSensu { get; set; } = default!;
    [Parameter]
    public EventCallback<PreceptorDegreeTypeModel?> OnClose { get; set; }

    private string _code = default!;
    private string _code3 = default!;
    private bool _latoSensu = default!;
    private bool _strictoSensu = default!;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _code = Code;
            _code3 = Code3;
            _latoSensu = LatoSensu;
            _strictoSensu = StrictoSensu;

            StateHasChanged();
        }
        base.OnAfterRender(firstRender);
    }

    private Task Cancel()
    {
        return OnClose.InvokeAsync(null);
    }

    private Task Ok()
    {
        if (string.Compare(_code, Code) != 0 || string.Compare(_code3, Code3) != 0 || LatoSensu != _latoSensu || StrictoSensu != _strictoSensu)
            return OnClose.InvokeAsync(new PreceptorDegreeTypeModel { Code = _code, Code3 = _code3, LatoSensu = _latoSensu, StrictoSensu = _strictoSensu });
        else
            return OnClose.InvokeAsync(null);
    }
}
