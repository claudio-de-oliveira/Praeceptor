// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PraeceptorCQRS.Infrastructure.Data;

#nullable disable

namespace PraeceptorCQRS.Infrastructure.Migrations
{
    [DbContext(typeof(PraeceptorCQRSDbContext))]
    [Migration("20221212134542_CampoCode3AdicionadoNasTabelasDeTipos")]
    partial class CampoCode3AdicionadoNasTabelasDeTipos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.AxisType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Code3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("AxisTypeTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Chapter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("ChapterTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasPlanner")
                        .HasColumnType("bit");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("PR")
                        .HasColumnType("int");

                    b.Property<int>("Practice")
                        .HasColumnType("int");

                    b.Property<int>("Theory")
                        .HasColumnType("int");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("TypeId");

                    b.ToTable("ClassTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.ClassType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Code3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEstagio")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemote")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTCC")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("ClassTypeTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Component", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Curriculum")
                        .HasColumnType("int");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AxisTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Optative")
                        .HasColumnType("bit");

                    b.HasKey("CourseId", "Curriculum", "Season", "ClassId");

                    b.HasIndex("AxisTypeId");

                    b.HasIndex("ClassId");

                    b.ToTable("ComponentTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<Guid?>("CEO")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinimumWorkload")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("NumberOfSeasons")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("CourseTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("DocumentTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("GroupTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.GroupValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupValueTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Holding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Address")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("HoldingTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Institute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Address")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HoldingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("HoldingId");

                    b.ToTable("InstituteTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Node", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FirstEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NextNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreviousNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SecondEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NextNodeId");

                    b.HasIndex("PreviousNodeId");

                    b.ToTable("ListNodeTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Pea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Printable")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("PeaTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Preceptor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DegreeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("RegimeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DegreeTypeId");

                    b.HasIndex("InstituteId");

                    b.HasIndex("RegimeTypeId");

                    b.ToTable("PreceptorTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.PreceptorDegreeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Code3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LatoSensu")
                        .HasColumnType("bit");

                    b.Property<bool>("StrictoSensu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("PreceptorDegreeTypeTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.PreceptorRegimeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Code3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("PreceptorRegimeTypeTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.PreceptorRoleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Code3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("PreceptorRoleTypeTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("SectionTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SimpleTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Footer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rows")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("SimpleTablesTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SocialBodyEntry", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PreceptorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseId", "PreceptorId", "RoleId");

                    b.HasIndex("PreceptorId");

                    b.HasIndex("RoleId");

                    b.ToTable("CourseSocialBodyTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SqlDocxStream", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("DocxStreamTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SqlFileStream", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Source")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Title")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("FileStreamTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SubSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("SubSectionTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SubSubSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("SubSubSectionTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Variable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("VariableTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.VariableValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VariableId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupValueId");

                    b.HasIndex("VariableId");

                    b.ToTable("VariableValueTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Infrastructure.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessageTable", (string)null);
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.AxisType", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("AxisTypes")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Chapter", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("Chapters")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Class", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("Classes")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PraeceptorCQRS.Domain.Entities.ClassType", "Type")
                        .WithMany("Classes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institute");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.ClassType", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("ClassTypes")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Component", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.AxisType", "Axis")
                        .WithMany("Components")
                        .HasForeignKey("AxisTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PraeceptorCQRS.Domain.Entities.Class", "Class")
                        .WithMany("Components")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PraeceptorCQRS.Domain.Entities.Course", "Course")
                        .WithMany("Components")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Axis");

                    b.Navigation("Class");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Course", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("Courses")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Document", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("Documents")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Group", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("Groups")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.GroupValue", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Group", "Group")
                        .WithMany("Values")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Institute", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Holding", "Holding")
                        .WithMany("Institutes")
                        .HasForeignKey("HoldingId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Holding");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Node", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Node", "NextNode")
                        .WithMany()
                        .HasForeignKey("NextNodeId");

                    b.HasOne("PraeceptorCQRS.Domain.Entities.Node", "PreviousNode")
                        .WithMany()
                        .HasForeignKey("PreviousNodeId");

                    b.Navigation("NextNode");

                    b.Navigation("PreviousNode");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Pea", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Class", "Class")
                        .WithMany("Peas")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Preceptor", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.PreceptorDegreeType", "DegreeType")
                        .WithMany("Preceptors")
                        .HasForeignKey("DegreeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("Preceptors")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PraeceptorCQRS.Domain.Entities.PreceptorRegimeType", "RegimeType")
                        .WithMany("Preceptors")
                        .HasForeignKey("RegimeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DegreeType");

                    b.Navigation("Institute");

                    b.Navigation("RegimeType");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.PreceptorDegreeType", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("PreceptorDegreeTypes")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.PreceptorRegimeType", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("PreceptorRegimeTypes")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.PreceptorRoleType", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("PreceptorRoleTypes")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Section", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("Sections")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SimpleTable", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("SimpleTables")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SocialBodyEntry", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Course", "Course")
                        .WithMany("CourseSocialBodyEntries")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PraeceptorCQRS.Domain.Entities.Preceptor", "Preceptor")
                        .WithMany("CourseSocialBodyEntries")
                        .HasForeignKey("PreceptorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PraeceptorCQRS.Domain.Entities.PreceptorRoleType", "Role")
                        .WithMany("CourseSocialBodyEntries")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Preceptor");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SubSection", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("SubSections")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.SubSubSection", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Institute", "Institute")
                        .WithMany("SubSubSections")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Institute");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Variable", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.Group", "Group")
                        .WithMany("Variables")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.VariableValue", b =>
                {
                    b.HasOne("PraeceptorCQRS.Domain.Entities.GroupValue", "GroupValue")
                        .WithMany("VariableValues")
                        .HasForeignKey("GroupValueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PraeceptorCQRS.Domain.Entities.Variable", "Variable")
                        .WithMany("Values")
                        .HasForeignKey("VariableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupValue");

                    b.Navigation("Variable");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.AxisType", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Class", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("Peas");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.ClassType", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Course", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("CourseSocialBodyEntries");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Group", b =>
                {
                    b.Navigation("Values");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.GroupValue", b =>
                {
                    b.Navigation("VariableValues");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Holding", b =>
                {
                    b.Navigation("Institutes");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Institute", b =>
                {
                    b.Navigation("AxisTypes");

                    b.Navigation("Chapters");

                    b.Navigation("ClassTypes");

                    b.Navigation("Classes");

                    b.Navigation("Courses");

                    b.Navigation("Documents");

                    b.Navigation("Groups");

                    b.Navigation("PreceptorDegreeTypes");

                    b.Navigation("PreceptorRegimeTypes");

                    b.Navigation("PreceptorRoleTypes");

                    b.Navigation("Preceptors");

                    b.Navigation("Sections");

                    b.Navigation("SimpleTables");

                    b.Navigation("SubSections");

                    b.Navigation("SubSubSections");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Preceptor", b =>
                {
                    b.Navigation("CourseSocialBodyEntries");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.PreceptorDegreeType", b =>
                {
                    b.Navigation("Preceptors");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.PreceptorRegimeType", b =>
                {
                    b.Navigation("Preceptors");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.PreceptorRoleType", b =>
                {
                    b.Navigation("CourseSocialBodyEntries");
                });

            modelBuilder.Entity("PraeceptorCQRS.Domain.Entities.Variable", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
